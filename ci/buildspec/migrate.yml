# AWS CodeBuild config
# This file is referenced in the infra repo as a CodeBuild buildspec target.

## The environment variables in this file are passed in through the buildbuild resource.
## Check the terraform scripts to see where these variables originate from.

version: 0.2
env:
  shell: bash
  secrets-manager:
    PGUSER: "${DB_CREDS_ARN}:user"
    PGPASSWORD: "${DB_CREDS_ARN}:password"
    PGHOST: "${DB_CREDS_ARN}:host"
    PGDATABASE: "${DB_CREDS_ARN}:db_name"
    PGPORT: "${DB_CREDS_ARN}:port"
    DATABASE_URL: "${DB_CREDS_ARN}:uri"

phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region "${ECR_REGION}" | docker login --username AWS --password-stdin "${ECR_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com"
  build:
    commands:
      - export ECR_REPO="${ECR_ACCOUNT_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com/${ECR_NAMESPACE}"

      # Pull down migration candidate image
      - docker pull "${ECR_REPO}/backend:migrate-${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}"

      # Default to db:migration:run
      - export MIGRATION_CMD="${MIGRATION_CMD:-db:migration:run}"

      # Execute migration
      - >
        docker run
        --env CLOUDINARY_CLOUD_NAME=$CLOUDINARY_CLOUD_NAME
        --env FILE_SERVICE=$FILE_SERVICE
        --env LISTINGS_QUERY=$LISTINGS_QUERY
        --env PGUSER=$PGUSER
        --env PGPASSWORD=$PGPASSWORD
        --env PGHOST=$PGHOST
        --env PGDATABASE=template1
        --env PGPORT=$PGPORT
        --env PORT=$PORT
        --env EMAIL_API_KEY=$EMAIL_API_KEY
        --env DATABASE_URL=$DATABASE_URL
        --env APP_SECRET=$APP_SECRET
        --env CLOUDINARY_SECRET=$CLOUDINARY_SECRET
        --env CLOUDINARY_KEY=$CLOUDINARY_KEY
        --env PARTNERS_BASE_URL=$PARTNERS_BASE_URL
        --env PARTNERS_PORTAL_URL=$PARTNERS_PORTAL_URL
        --env BLOOM_API_BASE=$BLOOM_API_BASE
        --env BLOOM_LISTINGS_QUERY=$BLOOM_LISTINGS_QUERY
        "${ECR_REPO}/backend:migrate" sh -c "yarn ${MIGRATION_CMD}"
