@use "sass:math";

// Using due to errors from compass mixin
@mixin custom-linear-gradient($top, $bottom) {
  background: $top; /* Old browsers */
  background: -moz-linear-gradient(top, $top 0%, $bottom 100%); /* FF3.6+ */
  background: -webkit-linear-gradient(top, $top 0%, $bottom 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, $top 0%, $bottom 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(top, $top 0%, $bottom 100%); /* IE10+ */
  background: linear-gradient(to bottom, $top 0%, $bottom 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}

// Adds full screen image to pseudo element
@mixin overlay-image() {
  display: block;
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  content: "";
  z-index: 2;
}

@mixin clearfix() {
  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

@mixin has-toggle() {
  &:after {
    font-weight: bold;
    display: inline-block;
    margin-left: var(--bloom-s2);
    margin-right: var(--bloom-s2);
    font-size: var(--bloom-font-size-xs);
    content: "âŒƒ";
    transform: rotate(180deg) translateY(2px);
  }
  &[aria-expanded="true"]:after {
    margin-right: var(--bloom-s5);
    transform: rotate(0deg) translateY(2px);
  }
}

@mixin has-image-skeleton() {
  background-color: var(--bloom-color-gray-500);

  &::before {
    float: left;
    content: "";
    width: 1px;
    margin-left: -1px;
    height: 0;
    padding-top: math.div(591.44px, 1127.34px) * 100%;
  }

  &::after {
    /* to clear float */
    display: table;
    clear: both;
    content: "";
  }
}

@mixin filled-appearances() {
  &.is-primary {
    background-color: var(--primary-appearance-background-color, var(--bloom-color-primary));
    border-color: var(--primary-appearance-border-color, var(--bloom-color-primary));
    color: var(--primary-appearance-label-color, var(--bloom-color-white));

    &:hover {
      background-color: var(
        --primary-appearance-hover-background-color,
        var(--bloom-color-primary-dark)
      );
      border-color: var(--primary-appearance-hover-border-color, var(--bloom-color-primary-dark));
      color: var(--primary-appearance-hover-label-color, var(--bloom-color-white));
    }
  }

  &.is-success {
    background-color: var(--success-appearance-background-color, var(--bloom-color-success));
    border-color: var(--success-appearance-border-color, var(--bloom-color-success));
    color: var(--success-appearance-label-color, var(--bloom-color-white));

    &:hover {
      background-color: var(
        --success-appearance-hover-background-color,
        var(--bloom-color-success-dark)
      );
      border-color: var(--success-appearance-hover-border-color, var(--bloom-color-success-dark));
      color: var(--success-appearance-hover-label-color, var(--bloom-color-white));
    }
  }

  &.is-alert {
    background-color: var(--alert-appearance-background-color, var(--bloom-color-alert));
    border-color: var(--alert-appearance-border-color, var(--bloom-color-alert));
    color: var(--alert-appearance-label-color, var(--bloom-color-white));

    &:hover {
      background-color: var(
        --alert-appearance-hover-background-color,
        var(--bloom-color-alert-dark)
      );
      border-color: var(--alert-appearance-hover-border-color, var(--bloom-color-alert-dark));
      color: var(--alert-appearance-hover-label-color, var(--bloom-color-white));
    }
  }

  &.is-warning {
    background-color: var(--warning-appearance-background-color, var(--bloom-color-warn));
    border-color: var(--warning-appearance-border-color, var(--bloom-color-warn));
    color: var(--warning-appearance-label-color, var(--bloom-text-color-dark));

    &:hover {
      background-color: var(
        --warning-appearance-hover-background-color,
        var(--bloom-color-warn-dark)
      );
      border-color: var(--warning-appearance-hover-border-color, var(--bloom-color-warn-dark));
      color: var(--warning-appearance-hover-label-color, var(--bloom-color-white));
    }
  }

  &.is-borderless {
    color: var(--borderless-filled-color, var(--bloom-color-primary));
    border-color: transparent;
    background: transparent;

    &:hover {
      background: transparent;
      border-color: transparent;
      color: var(--bloom-color-primary-darker);
    }
  }
}

@mixin outlined-appearances() {
  background-color: var(--bloom-color-white);
  color: var(--bloom-color-primary);
  border-width: var(--bloom-border-2);
  border-color: var(--bloom-color-primary);

  &:hover {
    background-color: var(
      --outlined-appearance-hover-background-color,
      var(--bloom-color-primary-dark)
    );
    border-color: var(--outlined-appearance-hover-border-color, var(--bloom-color-primary-dark));
    color: var(--outlined-appearance-hover-label-color, var(--bloom-color-white));
  }

  &.is-outlined {
    background: transparent;

    &.is-success {
      color: var(--bloom-color-success);

      &:hover {
        color: var(--bloom-color-white);
      }
    }

    &.is-alert {
      color: var(--bloom-color-alert);

      &:hover {
        color: var(--bloom-color-white);
      }
    }

    &.is-warning {
      color: var(--bloom-text-color-dark);

      &:hover {
        color: var(--bloom-color-white);
      }
    }
  }
}

@mixin transition-timing {
  transition-duration: 0.25s;
  transition-timing-function: cubic-bezier(0.475, 0.335, 0.43, 0.94);

  @media (prefers-reduced-motion: reduce) {
    transition-duration: 0s;
  }
}

@mixin ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin headings {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @content;
  }
}
